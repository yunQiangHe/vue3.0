{"code":"import { isString } from '@vue/shared';\r\n// AST Utilities ---------------------------------------------------------------\r\n// Some expressions, e.g. sequence and conditional expressions, are never\r\n// associated with template nodes, so their source locations are just a stub.\r\n// Container types like CompoundExpression also don't need a real location.\r\nexport const locStub = {\r\n    source: '',\r\n    start: { line: 1, column: 1, offset: 0 },\r\n    end: { line: 1, column: 1, offset: 0 }\r\n};\r\nexport function createArrayExpression(elements, loc = locStub) {\r\n    return {\r\n        type: 15 /* JS_ARRAY_EXPRESSION */,\r\n        loc,\r\n        elements\r\n    };\r\n}\r\nexport function createObjectExpression(properties, loc = locStub) {\r\n    return {\r\n        type: 13 /* JS_OBJECT_EXPRESSION */,\r\n        loc,\r\n        properties\r\n    };\r\n}\r\nexport function createObjectProperty(key, value) {\r\n    return {\r\n        type: 14 /* JS_PROPERTY */,\r\n        loc: locStub,\r\n        key: isString(key) ? createSimpleExpression(key, true) : key,\r\n        value\r\n    };\r\n}\r\nexport function createSimpleExpression(content, isStatic, loc = locStub) {\r\n    return {\r\n        type: 4 /* SIMPLE_EXPRESSION */,\r\n        loc,\r\n        content,\r\n        isStatic\r\n    };\r\n}\r\nexport function createInterpolation(content, loc) {\r\n    return {\r\n        type: 5 /* INTERPOLATION */,\r\n        loc,\r\n        content: isString(content)\r\n            ? createSimpleExpression(content, false, loc)\r\n            : content\r\n    };\r\n}\r\nexport function createCompoundExpression(children) {\r\n    return {\r\n        type: 8 /* COMPOUND_EXPRESSION */,\r\n        loc: locStub,\r\n        children\r\n    };\r\n}\r\nexport function createCallExpression(callee, args = [], loc = locStub) {\r\n    return {\r\n        type: 12 /* JS_CALL_EXPRESSION */,\r\n        loc,\r\n        callee,\r\n        arguments: args\r\n    };\r\n}\r\nexport function createFunctionExpression(params, returns, newline = false, loc = locStub) {\r\n    return {\r\n        type: 16 /* JS_FUNCTION_EXPRESSION */,\r\n        params,\r\n        returns,\r\n        newline,\r\n        loc\r\n    };\r\n}\r\nexport function createSequenceExpression(expressions) {\r\n    return {\r\n        type: 17 /* JS_SEQUENCE_EXPRESSION */,\r\n        expressions,\r\n        loc: locStub\r\n    };\r\n}\r\nexport function createConditionalExpression(test, consequent, alternate) {\r\n    return {\r\n        type: 18 /* JS_CONDITIONAL_EXPRESSION */,\r\n        test,\r\n        consequent,\r\n        alternate,\r\n        loc: locStub\r\n    };\r\n}\r\n","references":["/Users/apple/Desktop/vue3/vue-next/packages/shared/src/index.ts","/Users/apple/Desktop/vue3/vue-next/packages/compiler-core/src/transforms/vFor.ts","/Users/apple/Desktop/vue3/vue-next/packages/compiler-core/src/runtimeHelpers.ts","/Users/apple/Desktop/vue3/vue-next/packages/compiler-core/src/transforms/transformElement.ts"]}
