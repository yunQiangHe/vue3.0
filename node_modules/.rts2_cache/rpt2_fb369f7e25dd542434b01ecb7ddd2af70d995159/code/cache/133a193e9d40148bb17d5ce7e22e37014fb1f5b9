{"code":"import { currentRenderingInstance } from '../componentRenderUtils';\r\nimport { currentInstance } from '../component';\r\nimport { camelize, capitalize } from '@vue/shared';\r\nimport { warn } from '../warning';\r\nexport function resolveComponent(name) {\r\n    return resolveAsset('components', name);\r\n}\r\nexport function resolveDirective(name) {\r\n    return resolveAsset('directives', name);\r\n}\r\nfunction resolveAsset(type, name) {\r\n    const instance = currentRenderingInstance || currentInstance;\r\n    if (instance) {\r\n        let camelized;\r\n        const registry = instance[type];\r\n        const res = registry[name] ||\r\n            registry[(camelized = camelize(name))] ||\r\n            registry[capitalize(camelized)];\r\n        if (__DEV__ && !res) {\r\n            warn(`Failed to resolve ${type.slice(0, -1)}: ${name}`);\r\n        }\r\n        return res;\r\n    }\r\n    else if (__DEV__) {\r\n        warn(`resolve${capitalize(type.slice(0, -1))} ` +\r\n            `can only be used in render() or setup().`);\r\n    }\r\n}\r\n","references":["/Users/apple/Desktop/vue3/vue-next/packages/runtime-core/src/componentRenderUtils.ts","/Users/apple/Desktop/vue3/vue-next/packages/runtime-core/src/component.ts","/Users/apple/Desktop/vue3/vue-next/packages/runtime-core/src/directives.ts","/Users/apple/Desktop/vue3/vue-next/packages/shared/src/index.ts","/Users/apple/Desktop/vue3/vue-next/packages/runtime-core/src/warning.ts"]}
