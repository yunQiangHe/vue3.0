{"code":"// Patch flags are optimization hints generated by the compiler.\r\n// when a block with dynamicChildren is encountered during diff, the algorithm\r\n// enters \"optimized mode\". In this mode, we know that the vdom is produced by\r\n// a render function generated by the compiler, so the algorithm only needs to\r\n// handle updates explicitly marked by these patch flags.\r\n// runtime object for public consumption\r\nexport const PublicPatchFlags = {\r\n    TEXT: 1 /* TEXT */,\r\n    CLASS: 2 /* CLASS */,\r\n    STYLE: 4 /* STYLE */,\r\n    PROPS: 8 /* PROPS */,\r\n    NEED_PATCH: 32 /* NEED_PATCH */,\r\n    FULL_PROPS: 16 /* FULL_PROPS */,\r\n    KEYED_FRAGMENT: 64 /* KEYED_FRAGMENT */,\r\n    UNKEYED_FRAGMENT: 128 /* UNKEYED_FRAGMENT */,\r\n    DYNAMIC_SLOTS: 256 /* DYNAMIC_SLOTS */,\r\n    BAIL: -1 /* BAIL */\r\n};\r\n// dev only flag -> name mapping\r\nexport const PatchFlagNames = {\r\n    [1 /* TEXT */]: `TEXT`,\r\n    [2 /* CLASS */]: `CLASS`,\r\n    [4 /* STYLE */]: `STYLE`,\r\n    [8 /* PROPS */]: `PROPS`,\r\n    [32 /* NEED_PATCH */]: `NEED_PATCH`,\r\n    [16 /* FULL_PROPS */]: `FULL_PROPS`,\r\n    [64 /* KEYED_FRAGMENT */]: `KEYED_FRAGMENT`,\r\n    [128 /* UNKEYED_FRAGMENT */]: `UNKEYED_FRAGMENT`,\r\n    [256 /* DYNAMIC_SLOTS */]: `DYNAMIC_SLOTS`,\r\n    [-1 /* BAIL */]: `BAIL`\r\n};\r\n","references":[]}
