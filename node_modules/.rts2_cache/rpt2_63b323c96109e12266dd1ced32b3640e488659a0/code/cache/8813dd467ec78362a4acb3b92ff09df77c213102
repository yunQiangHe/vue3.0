{"code":"export * from './patchFlags';\r\nexport { globalsWhitelist } from './globalsWhitelist';\r\nexport const EMPTY_OBJ = __DEV__\r\n    ? Object.freeze({})\r\n    : {};\r\nexport const EMPTY_ARR = [];\r\nexport const NOOP = () => { };\r\nexport const isOn = (key) => key[0] === 'o' && key[1] === 'n';\r\nexport const extend = (a, b) => {\r\n    for (const key in b) {\r\n        ;\r\n        a[key] = b[key];\r\n    }\r\n    return a;\r\n};\r\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\r\nexport const hasOwn = (val, key) => hasOwnProperty.call(val, key);\r\nexport const isArray = Array.isArray;\r\nexport const isFunction = (val) => typeof val === 'function';\r\nexport const isString = (val) => typeof val === 'string';\r\nexport const isSymbol = (val) => typeof val === 'symbol';\r\nexport const isObject = (val) => val !== null && typeof val === 'object';\r\nexport const objectToString = Object.prototype.toString;\r\nexport const toTypeString = (value) => objectToString.call(value);\r\nexport const isPlainObject = (val) => toTypeString(val) === '[object Object]';\r\nconst vnodeHooksRE = /^vnode/;\r\nexport const isReservedProp = (key) => key === 'key' || key === 'ref' || vnodeHooksRE.test(key);\r\nconst camelizeRE = /-(\\w)/g;\r\nexport const camelize = (str) => {\r\n    return str.replace(camelizeRE, (_, c) => (c ? c.toUpperCase() : ''));\r\n};\r\nconst hyphenateRE = /\\B([A-Z])/g;\r\nexport const hyphenate = (str) => {\r\n    return str.replace(hyphenateRE, '-$1').toLowerCase();\r\n};\r\nexport const capitalize = (str) => {\r\n    return str.charAt(0).toUpperCase() + str.slice(1);\r\n};\r\n","references":["/Users/apple/Desktop/vue3/vue-next/packages/shared/src/patchFlags.ts","/Users/apple/Desktop/vue3/vue-next/packages/shared/src/globalsWhitelist.ts"]}
