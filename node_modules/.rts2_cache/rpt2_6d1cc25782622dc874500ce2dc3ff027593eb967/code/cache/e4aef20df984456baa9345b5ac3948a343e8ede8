{"code":"export const FRAGMENT = Symbol(__DEV__ ? `Fragment` : ``);\r\nexport const PORTAL = Symbol(__DEV__ ? `Portal` : ``);\r\nexport const COMMENT = Symbol(__DEV__ ? `Comment` : ``);\r\nexport const TEXT = Symbol(__DEV__ ? `Text` : ``);\r\nexport const SUSPENSE = Symbol(__DEV__ ? `Suspense` : ``);\r\nexport const EMPTY = Symbol(__DEV__ ? `Empty` : ``);\r\nexport const OPEN_BLOCK = Symbol(__DEV__ ? `openBlock` : ``);\r\nexport const CREATE_BLOCK = Symbol(__DEV__ ? `createBlock` : ``);\r\nexport const CREATE_VNODE = Symbol(__DEV__ ? `createVNode` : ``);\r\nexport const RESOLVE_COMPONENT = Symbol(__DEV__ ? `resolveComponent` : ``);\r\nexport const RESOLVE_DIRECTIVE = Symbol(__DEV__ ? `resolveDirective` : ``);\r\nexport const APPLY_DIRECTIVES = Symbol(__DEV__ ? `applyDirectives` : ``);\r\nexport const RENDER_LIST = Symbol(__DEV__ ? `renderList` : ``);\r\nexport const RENDER_SLOT = Symbol(__DEV__ ? `renderSlot` : ``);\r\nexport const CREATE_SLOTS = Symbol(__DEV__ ? `createSlots` : ``);\r\nexport const TO_STRING = Symbol(__DEV__ ? `toString` : ``);\r\nexport const MERGE_PROPS = Symbol(__DEV__ ? `mergeProps` : ``);\r\nexport const TO_HANDLERS = Symbol(__DEV__ ? `toHandlers` : ``);\r\nexport const CAMELIZE = Symbol(__DEV__ ? `camelize` : ``);\r\n// Name mapping for runtime helpers that need to be imported from 'vue' in\r\n// generated code. Make sure these are correctly exported in the runtime!\r\nexport const helperNameMap = {\r\n    [FRAGMENT]: `Fragment`,\r\n    [PORTAL]: `Portal`,\r\n    [COMMENT]: `Comment`,\r\n    [TEXT]: `Text`,\r\n    [SUSPENSE]: `Suspense`,\r\n    [EMPTY]: `Empty`,\r\n    [OPEN_BLOCK]: `openBlock`,\r\n    [CREATE_BLOCK]: `createBlock`,\r\n    [CREATE_VNODE]: `createVNode`,\r\n    [RESOLVE_COMPONENT]: `resolveComponent`,\r\n    [RESOLVE_DIRECTIVE]: `resolveDirective`,\r\n    [APPLY_DIRECTIVES]: `applyDirectives`,\r\n    [RENDER_LIST]: `renderList`,\r\n    [RENDER_SLOT]: `renderSlot`,\r\n    [CREATE_SLOTS]: `createSlots`,\r\n    [TO_STRING]: `toString`,\r\n    [MERGE_PROPS]: `mergeProps`,\r\n    [TO_HANDLERS]: `toHandlers`,\r\n    [CAMELIZE]: `camelize`\r\n};\r\n","references":[]}
