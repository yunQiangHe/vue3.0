{"code":"export { ref, isRef, toRefs, reactive, isReactive, readonly, isReadonly, toRaw, markReadonly, markNonReactive, effect } from '@vue/reactivity';\r\nimport { computed as _computed } from '@vue/reactivity';\r\nimport { currentInstance } from './component';\r\n// record effects created during a component's setup() so that they can be\r\n// stopped when the component unmounts\r\nexport function recordEffect(effect) {\r\n    if (currentInstance) {\r\n        ;\r\n        (currentInstance.effects || (currentInstance.effects = [])).push(effect);\r\n    }\r\n}\r\nexport function computed(getterOrOptions) {\r\n    const c = _computed(getterOrOptions);\r\n    recordEffect(c.effect);\r\n    return c;\r\n}\r\n","references":["/Users/apple/Desktop/vue3/vue-next/packages/reactivity/src/index.ts","/Users/apple/Desktop/vue3/vue-next/packages/reactivity/src/index.ts","/Users/apple/Desktop/vue3/vue-next/packages/runtime-core/src/component.ts"]}
