{"code":"import { isArray, isString, isObject } from '@vue/shared';\r\nexport function renderList(source, renderItem) {\r\n    let ret = [];\r\n    if (isArray(source) || isString(source)) {\r\n        for (let i = 0, l = source.length; i < l; i++) {\r\n            ret.push(renderItem(source[i], i));\r\n        }\r\n    }\r\n    else if (typeof source === 'number') {\r\n        for (let i = 0; i < source; i++) {\r\n            ret.push(renderItem(i + 1, i));\r\n        }\r\n    }\r\n    else if (isObject(source)) {\r\n        if (source[Symbol.iterator]) {\r\n            ret = [];\r\n            const iterator = source[Symbol.iterator]();\r\n            let result = iterator.next();\r\n            while (!result.done) {\r\n                ret.push(renderItem(result.value, ret.length));\r\n                result = iterator.next();\r\n            }\r\n        }\r\n        else {\r\n            const keys = Object.keys(source);\r\n            ret = new Array(keys.length);\r\n            for (let i = 0, l = keys.length; i < l; i++) {\r\n                const key = keys[i];\r\n                ret[i] = renderItem(source[key], key, i);\r\n            }\r\n        }\r\n    }\r\n    return ret;\r\n}\r\n","references":["/Users/apple/Desktop/vue3/vue-next/packages/runtime-core/src/vnode.ts","/Users/apple/Desktop/vue3/vue-next/packages/shared/src/index.ts"]}
