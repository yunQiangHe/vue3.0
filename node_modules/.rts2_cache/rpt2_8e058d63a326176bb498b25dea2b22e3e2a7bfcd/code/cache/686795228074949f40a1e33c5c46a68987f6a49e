{"code":"import { reactive, readonly, toRaw } from './reactive';\r\nimport { track, trigger } from './effect';\r\nimport { LOCKED } from './lock';\r\nimport { isObject, hasOwn } from '@vue/shared';\r\nimport { isRef } from './ref';\r\nconst builtInSymbols = new Set(Object.getOwnPropertyNames(Symbol)\r\n    .map(key => Symbol[key])\r\n    .filter(value => typeof value === 'symbol'));\r\nfunction createGetter(isReadonly) {\r\n    return function get(target, key, receiver) {\r\n        const res = Reflect.get(target, key, receiver);\r\n        if (typeof key === 'symbol' && builtInSymbols.has(key)) {\r\n            return res;\r\n        }\r\n        if (isRef(res)) {\r\n            return res.value;\r\n        }\r\n        track(target, \"get\" /* GET */, key);\r\n        return isObject(res)\r\n            ? isReadonly\r\n                ? // need to lazy access readonly and reactive here to avoid\r\n                    // circular dependency\r\n                    readonly(res)\r\n                : reactive(res)\r\n            : res;\r\n    };\r\n}\r\nfunction set(target, key, value, receiver) {\r\n    value = toRaw(value);\r\n    const hadKey = hasOwn(target, key);\r\n    const oldValue = target[key];\r\n    if (isRef(oldValue) && !isRef(value)) {\r\n        oldValue.value = value;\r\n        return true;\r\n    }\r\n    const result = Reflect.set(target, key, value, receiver);\r\n    // don't trigger if target is something up in the prototype chain of original\r\n    if (target === toRaw(receiver)) {\r\n        /* istanbul ignore else */\r\n        if (__DEV__) {\r\n            const extraInfo = { oldValue, newValue: value };\r\n            if (!hadKey) {\r\n                trigger(target, \"add\" /* ADD */, key, extraInfo);\r\n            }\r\n            else if (value !== oldValue) {\r\n                trigger(target, \"set\" /* SET */, key, extraInfo);\r\n            }\r\n        }\r\n        else {\r\n            if (!hadKey) {\r\n                trigger(target, \"add\" /* ADD */, key);\r\n            }\r\n            else if (value !== oldValue) {\r\n                trigger(target, \"set\" /* SET */, key);\r\n            }\r\n        }\r\n    }\r\n    return result;\r\n}\r\nfunction deleteProperty(target, key) {\r\n    const hadKey = hasOwn(target, key);\r\n    const oldValue = target[key];\r\n    const result = Reflect.deleteProperty(target, key);\r\n    if (hadKey) {\r\n        /* istanbul ignore else */\r\n        if (__DEV__) {\r\n            trigger(target, \"delete\" /* DELETE */, key, { oldValue });\r\n        }\r\n        else {\r\n            trigger(target, \"delete\" /* DELETE */, key);\r\n        }\r\n    }\r\n    return result;\r\n}\r\nfunction has(target, key) {\r\n    const result = Reflect.has(target, key);\r\n    track(target, \"has\" /* HAS */, key);\r\n    return result;\r\n}\r\nfunction ownKeys(target) {\r\n    track(target, \"iterate\" /* ITERATE */);\r\n    return Reflect.ownKeys(target);\r\n}\r\nexport const mutableHandlers = {\r\n    get: createGetter(false),\r\n    set,\r\n    deleteProperty,\r\n    has,\r\n    ownKeys\r\n};\r\nexport const readonlyHandlers = {\r\n    get: createGetter(true),\r\n    set(target, key, value, receiver) {\r\n        if (LOCKED) {\r\n            if (__DEV__) {\r\n                console.warn(`Set operation on key \"${String(key)}\" failed: target is readonly.`, target);\r\n            }\r\n            return true;\r\n        }\r\n        else {\r\n            return set(target, key, value, receiver);\r\n        }\r\n    },\r\n    deleteProperty(target, key) {\r\n        if (LOCKED) {\r\n            if (__DEV__) {\r\n                console.warn(`Delete operation on key \"${String(key)}\" failed: target is readonly.`, target);\r\n            }\r\n            return true;\r\n        }\r\n        else {\r\n            return deleteProperty(target, key);\r\n        }\r\n    },\r\n    has,\r\n    ownKeys\r\n};\r\n","references":["/Users/apple/Desktop/vue3/vue-next/packages/reactivity/src/reactive.ts","/Users/apple/Desktop/vue3/vue-next/packages/reactivity/src/operations.ts","/Users/apple/Desktop/vue3/vue-next/packages/reactivity/src/effect.ts","/Users/apple/Desktop/vue3/vue-next/packages/reactivity/src/lock.ts","/Users/apple/Desktop/vue3/vue-next/packages/shared/src/index.ts","/Users/apple/Desktop/vue3/vue-next/packages/reactivity/src/ref.ts"]}
